import bitstring

class Encoder():
    
    @staticmethod
    def encode_string(string):
        if isinstance(string, bytes):
            return bitstring.BitArray(bytes=string).bin
        return ''.join(
                 elem.zfill(8) for elem in map(
                     lambda s: s.replace('0b', ''), 
                     map(bin, bytearray(string, 'utf-8'))
                 ))
    
    @staticmethod
    def encode_file(file_path, mode='r'):
        with open(file_path, mode) as file:
            text = file.read()
        return Encoder.encode_string(text)
    
    @staticmethod
    def decode_string(string):
        byte_generator = (string[i:i+8] for i in range(0, len(string), 8))
        text = ''.join([chr(int(elem, 2)) for elem in byte_generator])
        return text
    
    @staticmethod
    def encode_float(float_num, bit_length=32):
        return bitstring.BitArray(float=float_num, length=bit_length).bin
        
    @staticmethod
    def decode_float(float_bin, bit_length=32):
        return bitstring.BitArray(bin=float_bin, length=bit_length).float
